server.port=7060
logging.level.org.springframework.web=DEBUG

spring.datasource.url=jdbc:h2:file:./_db/movieLensDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# Configure H2 database URL for Docker, creating the database file within the container
#spring.datasource.url=jdbc:h2:file:/data/shoppingMonolithAppDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.format_sql=true
spring.batch.jdbc.initialize-schema=always

# spring.kafka.producer.bootstrap-servers=localhost:9092
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
